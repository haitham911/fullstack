version:  '3.1'
services:
  app:
    container_name: task_app
    build: .
    ports: 
      - 8080:8080 
    restart: on-failure
    volumes:
      - api:/usr/src/app/
    depends_on:
      - task-postgres          # Uncomment this when using postgres.
      # - task-mysql           # Uncomment this when using mysql.
    networks:
      - taskhost
  task-postgres:
    image: postgres:latest
    container_name: database
    environment:
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: postgres784
      POSTGRES_DB: task_db
      DATABASE_HOST: task-postgres
    ports:
      - '5432:5432'
    volumes:
      - database_postgre:/var/lib/postgresql/data
    networks:
      - taskhost

  pgadmin:
    image: dpage/pgadmin4
    container_name: pgadmin_container
    environment:
      PGADMIN_DEFAULT_EMAIL: haitham@gmail.com
      PGADMIN_DEFAULT_PASSWORD: admin1234
    depends_on:
      - task-postgres
    ports:
      - "5050:80"
    networks:
      - taskhost
    restart: unless-stopped

  
  # task-mysql:
  #   image: mysql:5.7
  #   container_name: full_db_mysql
  #   ports: 
  #     - 3306:3306
  #   environment: 
  #     - MYSQL_ROOT_HOST=${DB_HOST} 
  #     - MYSQL_USER=${DB_USER}
  #     - MYSQL_PASSWORD=${DB_PASSWORD}
  #     - MYSQL_DATABASE=${DB_NAME}
  #     - MYSQL_ROOT_PASSWORD=${DB_PASSWORD}
  #   volumes:
  #     - database_mysql:/var/lib/mysql
  #   networks:
  #     - taskhost
  
  # phpmyadmin:
  #   image: phpmyadmin/phpmyadmin
  #   container_name: phpmyadmin_container
  #   depends_on:
  #     - taskhost-mysql
  #   environment:
  #     - PMA_HOST=mysql # Note the "mysql". Must be the name of the what you used as the mysql service.
  #     - PMA_USER=${DB_USER}
  #     - PMA_PORT=${DB_PORT}
  #     - PMA_PASSWORD=${DB_PASSWORD}
  #   ports:
  #     - 9090:80
  #   restart: always
  #   networks:
  #     - taskhost


volumes:
  api:
  database_postgre:                  # Uncomment this when using postgres.
  # database_mysql:                   # Uncomment this when using mysql.

# Networks to be created to facilitate communication between containers
networks:
  taskhost:
    driver: bridge